1. NL JOIN
    중첩된 반복문과 유사한 방식
    ┣ 반복문 외부: 선행 테이블, 외부 테이블
    ┗ 반복문 내부: 후행 테이블, 내부 테이블

    1) 선행 테이블에서 주어진 조건을 만족하는 행을 찾음
    2) 선행 테이블의 조인 키 값을 가지고 후행 테이블에서 조인 수행
    3) 선행 테이블의 조건을 만족하는 모든 행에 대해 1번 작업 반복 수행

    * 랜덤 방식으로 액세스
        → 처리 범위가 좁은 것이 유리
    * 조인 성공하면 바로 조인 결과 표시 가능
        → 결과를 빠르게 표시해야 하는 온라인 프로그램에 적당
    * 결과 행의 수가 적은 테이블을 선행 테이블로


2. SORT MERGE JOIN
    조인 칼럼을 기준으로 데이터 정렬하여 조인

    1) 각 테이블에 대해 동시에 독립적으로 데이터를 먼저 읽어들인다.
    2) 읽혀진 각 테이블의 데이터를 조인을 위한 연결고리에 대하여 정렬을 수행한다.
    3) 정렬이 모두 끝난 후에 조인 작업이 수행한다.

    * 스캔 방식으로 액세스
        → 넓은 범위의 데이터 처리
        → 정렬할 데이터가 많으면 성능 떨어짐
    * 비동등 조인에 대해서도 조인 작업 가능
    * 조인 칼럼의 인덱스가 존재하지 않아도 사용 가능


3. HASH JOIN
    해슁 기법: 해쉬 함수 → 동일한 해쉬 값 → 실제 값도 같은지 비교

    1) 둘 중 작은 집합(Build Input)을 읽어 Hash Area에 해시 테이블을 생성한다. (해시 함수에서 리턴 받은 버킷 주소로 찾아가 해시 체인에 엔트리를 연결)
    2) 반대쪽 큰 집합(Probe Input)을 읽어 해시 테이블을 탐색하면서 JOIN 한다.
    3) 해시 함수에서 리턴 받은 버킷 주소로 찾아가 해시 체인을 스캔하면서 데이터를 찾는다.

    * NL JOIN의 랜덤 액세스 문제점과 SORT MERGE JOIN의 정렬 작업 부담 해결 대안
    * 조인 칼럼의 인덱스가 존재하지 않아도 사용 가능
    * 동등(=) 조인에서만 사용
    * 결과 행의 수가 적은 테이블을 선행 테이블로

    ┌ 선행 테이블: Build Input
    └ 후행 테이블: Prove Input
